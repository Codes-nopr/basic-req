const https=require("https");class Request{constructor(){}async getJSON(t){if(!t)throw Error("Missing URL");if(!t.startsWith("https://"))throw new TypeError("URL must be starts with https");return new Promise((r,e)=>https.get(t,t=>{let s="";t.on("data",t=>{s+=t}).on("end",()=>r(JSON.parse(s))).on("error",t=>e(t))}).on("error",t=>e(t)))}async getText(t){if(!t)throw Error("Missing URL");if(!t.startsWith("https://"))throw new TypeError("URL must be starts with https");return new Promise((r,e)=>https.get(t,t=>{let s="";t.on("data",t=>{s+=t}).on("end",()=>r(s)).on("error",t=>e(t))}).on("error",t=>e(t)))}async getBuffer(t){if(!t)throw Error("Missing URL");if(!t.startsWith("https://"))throw new TypeError("URL must be starts with https");return new Promise((r,e)=>https.get(t,t=>{let s=[];t.on("data",t=>{s.push(t)}).on("end",()=>{let t=Buffer.concat(s);return r(Buffer.from(t))}).on("error",t=>e(t))}).on("error",t=>e(t)))}async getBase64(t){if(!t)throw Error("Missing URL");if(!t.startsWith("https://"))throw new TypeError("URL must be starts with https");return new Promise((r,e)=>https.get(t,t=>{let s=[];t.on("data",t=>{s.push(t)}).on("end",()=>{let t=Buffer.concat(s);return r(t.toString("base64"))}).on("error",t=>e(t))}).on("error",t=>e(t)))}async getBufferType(t,r){if(!t)throw Error("Missing URL");if(!t.startsWith("https://"))throw new TypeError("URL must be starts with https");return new Promise((e,s)=>https.get(t,t=>{let o=[];t.on("data",t=>{o.push(t)}).on("end",()=>{let t=Buffer.concat(o);return e(t.toString(r||"utf-8"))}).on("error",t=>s(t))}).on("error",t=>s(t)))}}module.exports=Request;